# simple-front-end/nginx.conf

# Basic nginx configuration for serving a React SPA

# User running nginx worker processes (often nginx or www-data)
user nginx; 
# Number of worker processes (auto detects usually fine)
worker_processes auto; 
# Path for PID file
pid /var/run/nginx.pid;
# Include dynamic modules if any (usually not needed for basic serving)
# include /etc/nginx/modules-enabled/*.conf; 

events {
    worker_connections 1024; # Max connections per worker
}

http {
    # Define MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Enable Gzip compression
    gzip on;
    gzip_disable "msie6"; # Disable for old IE
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        application/javascript
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/svg+xml
        image/x-icon
        text/css
        text/plain
        text/xml;

    # Server block to serve the React App
    server {
        listen 80; # Listen on default HTTP port inside container
        server_name localhost; # Or your domain if needed

        # Root directory where React build files are located
        root /usr/share/nginx/html;
        
        # Default file to serve
        index index.html index.htm;

        # Handle SPA routing: Try file, then directory, then fallback to index.html
        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api/v1/ { 
            # Use the Go API service name and its internal HTTP port
            proxy_pass http://go-api:8080/api/v1/; 

            # --- Standard Proxy Headers ---
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Optional: Increase timeouts if backend calls are slow
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Optional: Specific location block for static assets for caching headers
        location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public";
        }

        # Optional: Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}